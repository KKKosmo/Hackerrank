
def steadyGene(gene):
    # Write your code here
    size = int(len(gene) / 4)
    
    d = {'G':0, 'A':0, 'C':0, 'T':0}
    
    
    for x in gene:
        d[x] = d[x]+1
            
    if(d['G'] == d['A']
    and d['G'] == d['C']
    and d['G'] == d['T']
    and d['A'] == d['C']
    and d['A'] == d['T']
    and d['C'] == d['T']):
        return 0
    
    
    d['G'] = max(0, d['G'] - size)
    d['A'] = max(0, d['A'] - size)
    d['C'] = max(0, d['C'] - size)
    d['T'] = max(0, d['T'] - size)
    
    
    

    head = 0
    tail = 0
    minc = float('inf')
    
        
    # print(d)
    # print()
        
    substr = {'G':0, 'A':0, 'C':0, 'T':0}
    
    while(tail < len(gene)):
        substr[gene[tail]] = substr[gene[tail]] + 1
        # print(substr)
        tail += 1
        while(head < tail
        and substr['G'] >= d['G']
        and substr['A'] >= d['A']
        and substr['C'] >= d['C']
        and substr['T'] >= d['T']):
            substr[gene[head]] = substr[gene[head]] - 1
            
            head += 1
        
            minc = min(minc, tail-head+1)
        
        
    
    return minc